{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Input, Div, Form, Label, Textarea, Button, Img } from './write';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n\n  const [imgFile, setImgFile] = useState(null); //파일\n\n  const img = useRef(); // //\n  // const callApi = () => {\n  //     fetch(\"http://localhost:4848/auth/join\", {\n  //         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  //         mode: 'cors', // no-cors, cors, *same-origin\n  //         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  //         credentials: 'same-origin', // include, *same-origin, omit\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             // 'Content-Type': 'application/x-www-form-urlencoded',\n  //         },\n  //         redirect: 'follow', // manual, *follow, error\n  //         referrer: 'no-referrer', // no-referrer, *client\n  //         body: JSON.stringify(userInfo),\n  // }).then((res) => {\n  //     console.log(res.data)\n  //     });\n  // }\n  // const onSubmit = (e) => {\n  //     e.preventDefault();\n  //     callApi();\n  // }\n\n  const handleChangeFile = event => {\n    const formData = new FormData();\n    console.log(formData);\n    console.log(event.target.files[0]);\n    Object.assign(formData, {\n      img: event.target.files[0]\n    });\n    console.log(formData); // axios.post('http://localhost:4848/post/img', formData)\n    //     .then((res) => {\n    //         console.log(res)\n    //     })\n    //     .catch((err) => {\n    //         console.error(err);\n    //     });\n\n    fetch(\"http://localhost:4848/post/img\", {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, cors, *same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrer: 'no-referrer',\n      // no-referrer, *client\n      body: formData\n    }).then(res => {\n      console.log(res.data);\n    });\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n      const base64 = reader.result;\n\n      if (base64) {\n        setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n      }\n    };\n\n    if (event.target.files[0]) {\n      reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\n      setImgFile(event.target.files[0]); // 파일 상태 업데이트\n    }\n\n    return img.current.style = 'display: block';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Div, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"twit-form\",\n      action: \"http://localhost:4848/post\",\n      method: \"post\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        img: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"input-file-button\",\n          for: \"imgFile\",\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          img: true,\n          type: \"file\",\n          name: \"imgFile\",\n          id: \"imgFile\",\n          required: true,\n          onChange: handleChangeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        showImg: true,\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          ref: img,\n          src: imgBase64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          name: \"content\",\n          maxLength: \"140\",\n          placeholder: \"\\uBB38\\uAD6C \\uC785\\uB825...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"0jMF0wpiI2fqFDjWSX8Wj6mkN14=\");\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx"],"names":["React","useRef","useState","Input","Div","Form","Label","Textarea","Button","Img","axios","Write","imgBase64","setImgBase64","imgFile","setImgFile","img","handleChangeFile","event","formData","FormData","console","log","target","files","Object","assign","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","then","res","data","reader","FileReader","onloadend","base64","result","toString","readAsDataURL","current","style"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Input, Div, Form, Label, Textarea, Button, Img} from './write';\nimport axios from 'axios';\n\nconst Write = () => {\n    const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n    const [imgFile, setImgFile] = useState(null);\t//파일\n    const img = useRef();\n\n    // //\n    // const callApi = () => {\n    //     fetch(\"http://localhost:4848/auth/join\", {\n    //         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    //         mode: 'cors', // no-cors, cors, *same-origin\n    //         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    //         credentials: 'same-origin', // include, *same-origin, omit\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             // 'Content-Type': 'application/x-www-form-urlencoded',\n    //         },\n    //         redirect: 'follow', // manual, *follow, error\n    //         referrer: 'no-referrer', // no-referrer, *client\n    //         body: JSON.stringify(userInfo),\n    // }).then((res) => {\n    //     console.log(res.data)\n    //     });\n    // }\n    // const onSubmit = (e) => {\n    //     e.preventDefault();\n    //     callApi();\n    // }\n    const handleChangeFile = (event) => {\n\n        const formData = new FormData();\n        console.log(formData)\n        console.log(event.target.files[0])\n        Object.assign(formData, {img : event.target.files[0]})\n        console.log(formData)\n        // axios.post('http://localhost:4848/post/img', formData)\n        //     .then((res) => {\n        //         console.log(res)\n        //     })\n        //     .catch((err) => {\n        //         console.error(err);\n        //     });\n        fetch(\"http://localhost:4848/post/img\", {\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                    mode: 'cors', // no-cors, cors, *same-origin\n                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                    credentials: 'same-origin', // include, *same-origin, omit\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // 'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    redirect: 'follow', // manual, *follow, error\n                    referrer: 'no-referrer', // no-referrer, *client\n                    body: formData,\n            }).then((res) => {\n                console.log(res.data)\n            });\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n            const base64 = reader.result;\n            if (base64) {\n                setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n            }\n        }\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n            setImgFile(event.target.files[0]); // 파일 상태 업데이트\n        }\n\n        return img.current.style = 'display: block'\n    }\n\n    return (\n        <Div container>\n            <Form id=\"twit-form\" action=\"http://localhost:4848/post\" method=\"post\" encType=\"multipart/form-data\">\n                <Div img>\n                    <Label className=\"input-file-button\" for=\"imgFile\">\n                        이미지 업로드\n                    </Label>\n                    <Input img type=\"file\" name=\"imgFile\" id=\"imgFile\" required onChange={handleChangeFile} />\n                </Div>\n                <Div showImg>\n                    <Img ref={img} src={imgBase64} />\n                </Div>\n                <Div>\n                    <Textarea name=\"content\" maxLength=\"140\" placeholder=\"문구 입력...\" />\n                </Div>\n                <Button type=\"submit\">업로드</Button>\n            </Form>\n        </Div>\n    );\n};\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}