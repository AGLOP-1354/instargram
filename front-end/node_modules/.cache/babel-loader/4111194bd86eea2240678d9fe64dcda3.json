{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Input, Div, Form, Label, Textarea, Button, Img } from './write';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n\n  const [imgFile, setImgFile] = useState(null); //파일\n\n  const img = useRef();\n\n  const handleChangeFile = event => {\n    const formData = new FormData();\n    formData.append('img', event.target.files[0]);\n    axios.post('/post/img', formData, {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log({\n        response\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n      const base64 = reader.result;\n\n      if (base64) {\n        setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n      }\n    };\n\n    if (event.target.files[0]) {\n      reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\n      setImgFile(event.target.files[0]); // 파일 상태 업데이트\n    }\n\n    return img.current.style = 'display: block';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Div, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      action: \"/post\",\n      method: \"post\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        img: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          name: \"img\",\n          htmlFor: \"img\",\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"img-url\",\n          type: \"hidden\",\n          name: \"url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          img: true,\n          type: \"file\",\n          name: \"img\",\n          id: \"img\",\n          required: true,\n          onChange: handleChangeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        showImg: true,\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          ref: img,\n          src: imgBase64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          name: \"content\",\n          maxLength: \"140\",\n          placeholder: \"\\uBB38\\uAD6C \\uC785\\uB825...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"0jMF0wpiI2fqFDjWSX8Wj6mkN14=\");\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx"],"names":["React","useRef","useState","Input","Div","Form","Label","Textarea","Button","Img","axios","Write","imgBase64","setImgBase64","imgFile","setImgFile","img","handleChangeFile","event","formData","FormData","append","target","files","post","header","then","response","console","log","catch","err","error","reader","FileReader","onloadend","base64","result","toString","readAsDataURL","current","style"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Input, Div, Form, Label, Textarea, Button, Img} from './write';\nimport axios from 'axios';\n\nconst Write = () => {\n    const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n    const [imgFile, setImgFile] = useState(null);\t//파일\n    const img = useRef();\n\n    const handleChangeFile = (event) => {\n\n        const formData = new FormData();\n        formData.append('img', event.target.files[0]);\n        axios.post('/post/img', formData, {\n            header: { 'content-type': 'multipart/form-data' },\n        }).then((response) => {\n            console.log({ response });\n        }).catch((err) => {\n            console.error(err)\n        });\n\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n            const base64 = reader.result;\n            if (base64) {\n                setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n            }\n        }\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n            setImgFile(event.target.files[0]); // 파일 상태 업데이트\n        }\n\n        return img.current.style = 'display: block'\n    }\n\n    return (\n        <Div container>\n            <Form action=\"/post\" method=\"post\" encType=\"multipart/form-data\">\n                <Div img>\n                    <Label name=\"img\" htmlFor=\"img\">\n                        이미지 업로드\n                    </Label>\n                    <input id=\"img-url\" type=\"hidden\" name=\"url\" />\n                    <Input img type=\"file\" name=\"img\" id=\"img\" required onChange={handleChangeFile} />\n                </Div>\n                <Div showImg>\n                    <Img ref={img} src={imgBase64} />\n                </Div>\n                <Div>\n                    <Textarea name=\"content\" maxLength=\"140\" placeholder=\"문구 입력...\" />\n                </Div>\n                <Button type=\"submit\">업로드</Button>\n            </Form>\n        </Div>\n    );\n};\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}