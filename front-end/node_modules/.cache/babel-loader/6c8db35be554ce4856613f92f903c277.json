{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uD5A5\\uBBF8\\\\Desktop\\\\instargram\\\\front-end\\\\src\\\\contents\\\\components\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Input, Div, Form, Label, Textarea, Button, Img } from './write';\nimport axios from 'axios';\n\nconst Write = () => {\n  _s();\n\n  const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n\n  const [imgFile, setImgFile] = useState(null); //파일\n\n  const [url, setUrl] = useState('');\n  const img = useRef();\n\n  const handleChangeFile = event => {\n    const formData = new FormData();\n    formData.append('img', event.target.files[0]);\n    axios.post('/post/img', formData, {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res);\n      setUrl(res.data.url);\n    }).catch(err => {\n      console.error(err);\n    });\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n      const base64 = reader.result;\n\n      if (base64) {\n        setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n      }\n    };\n\n    if (event.target.files[0]) {\n      reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\n      setImgFile(event.target.files[0]); // 파일 상태 업데이트\n    }\n\n    img.current.style = 'display: block';\n  };\n\n  return /*#__PURE__*/React.createElement(Div, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    action: \"/post\",\n    method: \"post\",\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    img: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(Input, {\n    img: true,\n    type: \"file\",\n    id: \"img\",\n    required: true,\n    onChange: handleChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Div, {\n    showImg: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    ref: img,\n    src: imgBase64,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"hidden\",\n    name: \"url\",\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Textarea, {\n    name: \"content\",\n    maxLength: \"140\",\n    placeholder: \"\\uBB38\\uAD6C \\uC785\\uB825...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\")));\n};\n\n_s(Write, \"se4i8l8TPBmEzZ3Ngvwb/AkuUr8=\");\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["C:/Users/김향미/Desktop/instargram/front-end/src/contents/components/Write.jsx"],"names":["React","useRef","useState","Input","Div","Form","Label","Textarea","Button","Img","axios","Write","imgBase64","setImgBase64","imgFile","setImgFile","url","setUrl","img","handleChangeFile","event","formData","FormData","append","target","files","post","header","then","res","console","log","data","catch","err","error","reader","FileReader","onloadend","base64","result","toString","readAsDataURL","current","style"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {Input, Div, Form, Label, Textarea, Button, Img} from './write';\r\nimport axios from 'axios';\r\n\r\nconst Write = () => {\r\n    const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\r\n    const [imgFile, setImgFile] = useState(null);\t//파일\r\n    const [url, setUrl] = useState('');\r\n    const img = useRef();\r\n\r\n    const handleChangeFile = (event) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('img', event.target.files[0]);\r\n        axios.post('/post/img', formData, {\r\n            header: { 'content-type': 'multipart/form-data' },\r\n        }).then((res) => {\r\n            console.log(res);\r\n            setUrl(res.data.url);\r\n        }).catch((err) => {\r\n            console.error(err)\r\n        });\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n            const base64 = reader.result;\r\n            if (base64) {\r\n                setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\r\n            }\r\n        }\r\n        if (event.target.files[0]) {\r\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n            setImgFile(event.target.files[0]); // 파일 상태 업데이트\r\n        }\r\n\r\n        img.current.style = 'display: block'\r\n    }\r\n\r\n    return (\r\n        <Div container>\r\n            <Form action=\"/post\" method=\"post\" encType=\"multipart/form-data\">\r\n                <Div img>\r\n                    <Label htmlFor=\"img\">\r\n                        이미지 업로드\r\n                    </Label>\r\n                    <Input img type=\"file\" id=\"img\" required onChange={handleChangeFile} />\r\n                </Div>\r\n                <Div showImg>\r\n                    <Img ref={img} src={imgBase64} />\r\n                    <input id=\"url\" type=\"hidden\" name=\"url\" value={url}/>\r\n                </Div>\r\n                <Div>\r\n                    <Textarea name=\"content\" maxLength=\"140\" placeholder=\"문구 입력...\" />\r\n                </Div>\r\n                <Button type=\"submit\">업로드</Button>\r\n            </Form>\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Write;\r\n"]},"metadata":{},"sourceType":"module"}