{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Input, Div, Form, Label, Textarea, Button, Img } from './write';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Write = () => {\n  _s();\n\n  const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n\n  const [imgFile, setImgFile] = useState(null); //파일\n\n  const img = useRef();\n\n  const handleChangeFile = event => {\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n      const base64 = reader.result;\n\n      if (base64) {\n        setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n      }\n    };\n\n    if (event.target.files[0]) {\n      reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n\n      setImgFile(event.target.files[0]); // 파일 상태 업데이트\n    }\n\n    return img.current.style = 'display: block';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Div, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"twit-form\",\n      action: \"/post\",\n      method: \"post\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Div, {\n        img: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"input-file-button\",\n          for: \"imgFile\",\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          img: true,\n          type: \"file\",\n          name: \"imgFile\",\n          id: \"imgFile\",\n          required: true,\n          onChange: handleChangeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        showImg: true,\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          ref: img,\n          src: imgBase64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Div, {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          id: \"twit\",\n          name: \"content\",\n          maxLength: \"140\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"twit-btn\",\n        type: \"submit\",\n        className: \"btn\",\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Write, \"0jMF0wpiI2fqFDjWSX8Wj6mkN14=\");\n\n_c = Write;\nexport default Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["/Users/jake/Desktop/instargram/front-end/src/contents/components/Write.jsx"],"names":["React","useRef","useState","Input","Div","Form","Label","Textarea","Button","Img","axios","Write","imgBase64","setImgBase64","imgFile","setImgFile","img","handleChangeFile","event","reader","FileReader","onloadend","base64","result","toString","target","files","readAsDataURL","current","style"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Input, Div, Form, Label, Textarea, Button, Img} from './write';\nimport axios from 'axios';\n\nconst Write = () => {\n    const [imgBase64, setImgBase64] = useState(\"\"); // 파일 base64\n    const [imgFile, setImgFile] = useState(null);\t//파일\n    const img = useRef();\n\n    const handleChangeFile = (event) => {\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n            const base64 = reader.result;\n            if (base64) {\n                setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n            }\n        }\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n            setImgFile(event.target.files[0]); // 파일 상태 업데이트\n        }\n\n        return img.current.style = 'display: block'\n    }\n\n    return (\n        <Div container>\n            <Form id=\"twit-form\" action=\"/post\" method=\"post\" encType=\"multipart/form-data\">\n                <Div img>\n                    <Label className=\"input-file-button\" for=\"imgFile\">\n                        이미지 업로드\n                    </Label>\n                    <Input img type=\"file\" name=\"imgFile\" id=\"imgFile\" required onChange={handleChangeFile} />\n                </Div>\n                <Div showImg>\n                    <Img ref={img} src={imgBase64} />\n                </Div>\n                <Div>\n                    <Textarea id=\"twit\" name=\"content\" maxLength=\"140\"/>\n                </Div>\n                <Button id=\"twit-btn\" type=\"submit\" className=\"btn\">업로드</Button>\n            </Form>\n        </Div>\n    );\n};\n\nexport default Write;\n"]},"metadata":{},"sourceType":"module"}